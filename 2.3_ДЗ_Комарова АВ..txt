1. Уникальный номер сотрудника, его ФИО и стаж работы – для всех сотрудников компании

SELECT 	id,
		lastname,
		firstname,
		DATE(NOW()) - DATE(startday) AS days_experience
FROM staff;


2. Уникальный номер сотрудника, его ФИО и стаж работы – только первых 3-х сотрудников

SELECT 	id,
		lastname,
		firstname,
		DATE(NOW()) - DATE(startday) AS days_experience
FROM staff
ORDER BY days_experience DESC 
LIMIT 3;


3.  Уникальный номер сотрудников - водителей

SELECT 	id,
		lastname,
		firstname,
		post
FROM staff
WHERE post = 'водитель';


4. Выведите номера сотрудников, которые хотя бы за 1 квартал получили оценку D или E

SELECT 	id
		--lastname,
		--firstname,
		--points
FROM points
WHERE points IN ('D', 'E');


5. Выведите самую высокую зарплату в компании.

SELECT 	id,
		lastname,
		firstname,
		post,
		salary
FROM staff
ORDER BY salary DESC
LIMIT 1;


6. * Выведите название самого крупного отдела

SELECT 	/*id,*/
		DepartmentName
		/*Count_staff */
FROM department
ORDER BY Count_staff DESC
LIMIT 1;


7. * Выведите номера сотрудников от самых опытных до вновь прибывших

SELECT id 
FROM table_1;

SELECT 	id
		--lastname,
		--firstname,
		--DATE(NOW()) - DATE(startday) AS days_experience
FROM staff
ORDER BY DATE(NOW()) - DATE(startday) DESC


8. * Рассчитайте среднюю зарплату для каждого уровня сотрудников

SELECT 	PLevel,
		ROUND(AVG(salary), 2) AS avg_salary
FROM staff
GROUP BY PLevel
ORDER BY avg_salary ;


9.  * Добавьте столбец с информацией о коэффициенте годовой премии к основной таблице. 
Коэффициент рассчитывается по такой схеме: базовое значение коэффициента – 1, 
каждая оценка действует на коэффициент так:

·         Е – минус 20%

·         D – минус 10%

·         С – без изменений

·         B – плюс 10%

·         A – плюс 20%

Соответственно, сотрудник с оценками А, В, С, D – должен получить коэффициент 1.2.


CREATE TABLE test_staff AS
(
WITH table_3 AS (
WITH table_2 AS (

SELECT 	--id,
		lastname,
		firstname,
		--points,
		CASE WHEN points = 'A' THEN 0.2
         WHEN points = 'B'  THEN 0.1
		 WHEN points = 'C'  THEN 0
		 WHEN points = 'D'  THEN -0.1
         ELSE -0.2 END AS coeff,
		staff_id
		 
FROM points )

SELECT s.id AS ID,
		SUM(coeff)+1 AS coefficient
		--t.lastname,
		--t.firstname,
		--ROUND(AVG(s.salary), 2)
FROM table_2 t FULL JOIN staff s 
ON t.staff_id = s.id
GROUP BY s.id )

SELECT s2.lastname,
	   s2.firstname,
	s2.BirthDay,
	s2.StartDay,
	s2.Post,
	s2.PLevel,
	s2.Salary,
	t3.coefficient,
	s2.Department_id,
	s2.Rools
	
	    
FROM table_3 t3 INNER JOIN staff s2
ON t3.id = s2.id );











